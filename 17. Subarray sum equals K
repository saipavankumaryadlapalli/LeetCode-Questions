https://leetcode.com/problems/subarray-sum-equals-k/

class Solution {
    public int subarraySum(int[] nums, int k) {
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
        map.put(0,1);
        int prefixSum = 0;
        int res = 0;
        for(int i=0; i<nums.length; i++) {
            prefixSum += nums[i]; // add up the  elements in the array
            if(map.containsKey(prefixSum - k)) { // check whether if we can find the difference element in the map
                res += map.get(prefixSum - k); // if found then add up the count of that sum
            }
            map.put(prefixSum, map.getOrDefault(prefixSum,0) + 1 ); // update the count of added sum to map
        }
        return res;
    }
}

TimeComplexity: O(n);
SpaceComplexity: O(1);
