https://leetcode.com/problems/search-in-rotated-sorted-array

class Solution {
    public int search(int[] nums, int target) {
        int low =0, high = nums.length -1;
        if(nums[0] == target) {
            return low;
        } else return binarySearch(low,high,target,nums);
    }
    
    private int binarySearch(int low,int high,int target,int[] nums) {
        if(low < high) {
           if(nums[low] == target) {
               return low;
           } else if(nums[high] == target) {
                return high;
            }
        } else return -1;
        int mid = (low + high)/2;
        if(nums[mid] >= nums[low]){
            if(target <= nums[mid] && target >= nums[low]) {
                high = mid;
            } else {
                low = mid+1;
            }
        }                  
        else if (nums[mid] < nums[low]) {
            if(target > nums[mid] && target < nums[high]) {
                low = mid+1;
            } else high = mid;
        }
        return binarySearch(low,high,target,nums);
    }
}
